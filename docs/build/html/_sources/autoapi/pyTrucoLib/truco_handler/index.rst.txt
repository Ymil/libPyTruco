:py:mod:`pyTrucoLib.truco_handler`
==================================

.. py:module:: pyTrucoLib.truco_handler


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pyTrucoLib.truco_handler.state_decorator
   pyTrucoLib.truco_handler.truco_handler




Attributes
~~~~~~~~~~

.. autoapisummary::

   pyTrucoLib.truco_handler.STATE_TRUCO
   pyTrucoLib.truco_handler.STATE_RETRUCO
   pyTrucoLib.truco_handler.STATE_VALE_4
   pyTrucoLib.truco_handler.STATE_NO_QUERIDO
   pyTrucoLib.truco_handler.SI
   pyTrucoLib.truco_handler.NO


.. py:data:: STATE_TRUCO
   :annotation: = 1



.. py:data:: STATE_RETRUCO
   :annotation: = 2



.. py:data:: STATE_VALE_4
   :annotation: = 3



.. py:data:: STATE_NO_QUERIDO
   :annotation: = 4



.. py:data:: SI
   :annotation: = 1



.. py:data:: NO
   :annotation: = 0



.. py:exception:: TrucoNoQuerido(winPlayer, message)

   Bases: :py:obj:`Exception`

   Common base class for all non-exit exceptions.


.. py:class:: state_decorator

   Bases: :py:obj:`pyTrucoLib.state.State`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: _last_state_eq_new_state(self, new_state)


   .. py:method:: change_status_condicional(self, new_state)

      Se define la condicion para cambiar de status



.. py:class:: truco_handler(gameInstance)

   Bases: :py:obj:`state_decorator`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:attribute:: _quiero_team
      :annotation: :pyTrucoLib.team.Team



   .. py:attribute:: _last_player
      :annotation: :pyTrucoLib.jugador.Jugador



   .. py:attribute:: _points
      :annotation: :int = 1



   .. py:attribute:: _end_state




   .. py:method:: _general_truco_logic(new_state: int)


   .. py:method:: truco_handler(self, player: pyTrucoLib.jugador.Jugador, *args)


   .. py:method:: retruco_handler(self, player: pyTrucoLib.jugador.Jugador, *args)


   .. py:method:: vale4_handler(self, player: pyTrucoLib.jugador.Jugador, *args)


   .. py:method:: quiero_handler(self, player: pyTrucoLib.jugador.Jugador, decision)


   .. py:method:: get_points(self)
