:py:mod:`pyTrucoLib.actions.truco_actions`
==========================================

.. py:module:: pyTrucoLib.actions.truco_actions


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pyTrucoLib.actions.truco_actions.quiero_truco
   pyTrucoLib.actions.truco_actions.no_quiero_truco
   pyTrucoLib.actions.truco_actions.vale_4
   pyTrucoLib.actions.truco_actions.re_truco
   pyTrucoLib.actions.truco_actions.truco




Attributes
~~~~~~~~~~

.. autoapisummary::

   pyTrucoLib.actions.truco_actions.DEFAULT_TRUCO_ACTIONS
   pyTrucoLib.actions.truco_actions.TRUCO_ACTIONS


.. py:class:: quiero_truco

   Bases: :py:obj:`pyTrucoLib.actions.action.Action`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: name(cls)
      :classmethod:


   .. py:method:: execute(self, *args)



.. py:class:: no_quiero_truco

   Bases: :py:obj:`pyTrucoLib.actions.action.Action`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: name(cls)
      :classmethod:


   .. py:method:: execute(self, *args)



.. py:data:: DEFAULT_TRUCO_ACTIONS
   

   

.. py:class:: vale_4

   Bases: :py:obj:`pyTrucoLib.actions.action.Action`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:attribute:: _availables_next_actions
      

      

   .. py:method:: execute(self, action_value)



.. py:class:: re_truco

   Bases: :py:obj:`pyTrucoLib.actions.action.Action`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:attribute:: _availables_next_actions
      

      

   .. py:method:: execute(self, action_value)



.. py:class:: truco

   Bases: :py:obj:`pyTrucoLib.actions.action.Action`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:attribute:: _availables_next_actions
      

      

   .. py:method:: execute(self, action_value)



.. py:data:: TRUCO_ACTIONS
   

   

